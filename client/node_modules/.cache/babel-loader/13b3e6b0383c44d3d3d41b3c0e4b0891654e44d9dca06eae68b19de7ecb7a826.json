{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const verifyToken = () => async dispatch => {\n  try {\n    const response = await axios.get('http://localhost:5000/verify', {\n      withCredentials: true\n    });\n    if (response.status === 200) {\n      dispatch(loginSuccess());\n    } else {\n      //dispatch action for token expiration\n      dispatch(logoutDueToTokenExpired());\n    }\n  } catch (error) {\n    console.error('Token verification failed:', error);\n    dispatch(logout());\n  }\n};\nconst initialState = {\n  isAuthenticated: false,\n  user: null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.isAuthenticated = true;\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n    },\n    logoutDueToTokenExpired: state => {\n      state.isAuthenticated = false;\n    }\n  }\n});\nexport const {\n  loginSuccess,\n  logout,\n  logoutDueToTokenExpired\n} = authSlice.actions;\nexport const selectAuth = state => state.auth;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","axios","verifyToken","dispatch","response","get","withCredentials","status","loginSuccess","logoutDueToTokenExpired","error","console","logout","initialState","isAuthenticated","user","authSlice","name","reducers","state","action","actions","selectAuth","auth","reducer"],"sources":["C:/Users/BattleStation/Documents/School/Fall 2023/Software Engineering/Project/client/src/reducers/authSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const verifyToken = () => async (dispatch) => {\r\n    try{\r\n        const response = await axios.get('http://localhost:5000/verify', {\r\n            withCredentials: true,\r\n        });\r\n\r\n        if(response.status === 200){\r\n            dispatch(loginSuccess());\r\n        }\r\n        else{\r\n            //dispatch action for token expiration\r\n            dispatch(logoutDueToTokenExpired());\r\n        }\r\n    }catch(error){\r\n        console.error('Token verification failed:', error);\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        loginSuccess: (state, action) => {\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout: (state) => {\r\n            state.isAuthenticated = false;\r\n        },\r\n\r\n        logoutDueToTokenExpired: (state) => {\r\n            state.isAuthenticated = false;\r\n        }\r\n\r\n    }\r\n});\r\n\r\nexport const { loginSuccess, logout, logoutDueToTokenExpired} = authSlice.actions;\r\nexport const selectAuth = (state) => state.auth;\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACjD,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,8BAA8B,EAAE;MAC7DC,eAAe,EAAE;IACrB,CAAC,CAAC;IAEF,IAAGF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAC;MACvBJ,QAAQ,CAACK,YAAY,CAAC,CAAC,CAAC;IAC5B,CAAC,MACG;MACA;MACAL,QAAQ,CAACM,uBAAuB,CAAC,CAAC,CAAC;IACvC;EACJ,CAAC,QAAMC,KAAK,EAAC;IACTC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClDP,QAAQ,CAACS,MAAM,CAAC,CAAC,CAAC;EACtB;AACJ,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC1BiB,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNV,YAAY,EAAEA,CAACW,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,eAAe,GAAG,IAAI;IAChC,CAAC;IACDF,MAAM,EAAGO,KAAK,IAAK;MACfA,KAAK,CAACL,eAAe,GAAG,KAAK;IACjC,CAAC;IAEDL,uBAAuB,EAAGU,KAAK,IAAK;MAChCA,KAAK,CAACL,eAAe,GAAG,KAAK;IACjC;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,YAAY;EAAEI,MAAM;EAAEH;AAAuB,CAAC,GAAGO,SAAS,CAACK,OAAO;AACjF,OAAO,MAAMC,UAAU,GAAIH,KAAK,IAAKA,KAAK,CAACI,IAAI;AAC/C,eAAeP,SAAS,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
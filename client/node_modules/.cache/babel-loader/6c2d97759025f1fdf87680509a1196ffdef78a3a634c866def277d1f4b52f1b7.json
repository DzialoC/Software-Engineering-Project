{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BattleStation\\\\Documents\\\\School\\\\Fall 2023\\\\Software Engineering\\\\Project\\\\client\\\\src\\\\pages\\\\VehicleChecklist\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { InputField, Textarea, Checkbox } from '../../components/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VehicleChecklist = () => {\n  _s();\n  // State management for form inputs\n  const [formData, setFormData] = useState({\n    vehicleNumber: '',\n    yearMakeModel: '',\n    tag: '',\n    date: '',\n    mileage: '',\n    workTicket: '',\n    personReleasingVehicle: '',\n    bodyOfVehicle: false,\n    tiresConditionAndAirPressure: false,\n    // ... add other fields\n    comments: ''\n  });\n\n  // Event handler for form inputs\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Event handler for checkboxes\n  const handleCheckboxChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: checked\n    }));\n  };\n\n  // Event handler for form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Call backend API to submit formData (will show this in next steps)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(VehicleChecklist, \"S4NohBrbOYkSZiz5giGQtAuV04c=\");\n_c = VehicleChecklist;\nexport default VehicleChecklist;\nvar _c;\n$RefreshReg$(_c, \"VehicleChecklist\");","map":{"version":3,"names":["React","useState","InputField","Textarea","Checkbox","jsxDEV","_jsxDEV","VehicleChecklist","_s","formData","setFormData","vehicleNumber","yearMakeModel","tag","date","mileage","workTicket","personReleasingVehicle","bodyOfVehicle","tiresConditionAndAirPressure","comments","handleChange","e","name","value","target","prevData","handleCheckboxChange","checked","handleSubmit","preventDefault","onSubmit","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/BattleStation/Documents/School/Fall 2023/Software Engineering/Project/client/src/pages/VehicleChecklist/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { InputField, Textarea, Checkbox } from '../../components/index.js';\r\n\r\nconst VehicleChecklist = () => {\r\n  // State management for form inputs\r\n  const [formData, setFormData] = useState({\r\n    vehicleNumber: '',\r\n    yearMakeModel: '',\r\n    tag: '',\r\n    date: '',\r\n    mileage: '',\r\n    workTicket: '',\r\n    personReleasingVehicle: '',\r\n    bodyOfVehicle: false,\r\n    tiresConditionAndAirPressure: false,\r\n    // ... add other fields\r\n    comments: '',\r\n  });\r\n\r\n  // Event handler for form inputs\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  // Event handler for checkboxes\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: checked }));\r\n  };\r\n\r\n  // Event handler for form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Call backend API to submit formData (will show this in next steps)\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/*... previous form fields with added 'name' props and value & onChange handlers ...*/}\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n}\r\nexport default VehicleChecklist;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,aAAa,EAAE,EAAE;IACjBC,aAAa,EAAE,EAAE;IACjBC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,sBAAsB,EAAE,EAAE;IAC1BC,aAAa,EAAE,KAAK;IACpBC,4BAA4B,EAAE,KAAK;IACnC;IACAC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCf,WAAW,CAAEgB,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EAC7D,CAAC;;EAED;EACA,MAAMG,oBAAoB,GAAIL,CAAC,IAAK;IAClC,MAAM;MAAEC,IAAI;MAAEK;IAAQ,CAAC,GAAGN,CAAC,CAACG,MAAM;IAClCf,WAAW,CAAEgB,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAE,CAACH,IAAI,GAAGK;IAAQ,CAAC,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAOP,CAAC,IAAK;IAChCA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;;EAED,oBACExB,OAAA;IAAMyB,QAAQ,EAAEF,YAAa;IAAAG,QAAA,eAE3B1B,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAA7B,EAAA,CAxCKD,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAyCtB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BattleStation\\\\Documents\\\\School\\\\Fall 2023\\\\Software Engineering\\\\Project\\\\client\\\\src\\\\components\\\\ResponsiveTable.jsx\",\n  _s = $RefreshSig$();\n// ResponsiveTable.jsx\n\nimport React from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponsiveTable = ({\n  data\n}) => {\n  _s();\n  // Define columns for react-table\n  const columns = React.useMemo(() => [{\n    Header: \"Column 1\",\n    accessor: \"col1\"\n  },\n  // Replace with your actual data fields\n  {\n    Header: \"Column 2\",\n    accessor: \"col2\"\n  }\n  // Add as many columns as needed\n  ], []);\n\n  // Use the useTable hook to create your table configuration\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  // Render the UI for your table\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    className: \"responsive-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            children: cell.render(\"Cell\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ResponsiveTable, \"YQiMXBL4+QlkLA9k7ipC/uQMP2A=\", false, function () {\n  return [useTable];\n});\n_c = ResponsiveTable;\nexport default ResponsiveTable;\nvar _c;\n$RefreshReg$(_c, \"ResponsiveTable\");","map":{"version":3,"names":["React","useTable","jsxDEV","_jsxDEV","ResponsiveTable","data","_s","columns","useMemo","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/BattleStation/Documents/School/Fall 2023/Software Engineering/Project/client/src/components/ResponsiveTable.jsx"],"sourcesContent":["// ResponsiveTable.jsx\r\n\r\nimport React from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nconst ResponsiveTable = ({ data }) => {\r\n  // Define columns for react-table\r\n  const columns = React.useMemo(\r\n    () => [\r\n      { Header: \"Column 1\", accessor: \"col1\" }, // Replace with your actual data fields\r\n      { Header: \"Column 2\", accessor: \"col2\" },\r\n      // Add as many columns as needed\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Use the useTable hook to create your table configuration\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({ columns, data });\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <table {...getTableProps()} className=\"responsive-table\">\r\n      <thead>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => (\r\n                <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ResponsiveTable;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACpC;EACA,MAAMC,OAAO,GAAGP,KAAK,CAACQ,OAAO,CAC3B,MAAM,CACJ;IAAEC,MAAM,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAO,CAAC;EAAE;EAC1C;IAAED,MAAM,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAO;EACvC;EAAA,CACD,EACD,EACF,CAAC;;EAED;EACA,MAAM;IAAEC,aAAa;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC,IAAI;IAAEC;EAAW,CAAC,GACxEd,QAAQ,CAAC;IAAEM,OAAO;IAAEF;EAAK,CAAC,CAAC;;EAE7B;EACA,oBACEF,OAAA;IAAA,GAAWQ,aAAa,CAAC,CAAC;IAAEK,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBACtDd,OAAA;MAAAc,QAAA,EACGJ,YAAY,CAACK,GAAG,CAAEC,WAAW,iBAC5BhB,OAAA;QAAA,GAAQgB,WAAW,CAACC,mBAAmB,CAAC,CAAC;QAAAH,QAAA,EACtCE,WAAW,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,iBAC9BnB,OAAA;UAAA,GAAQmB,MAAM,CAACC,cAAc,CAAC,CAAC;UAAAN,QAAA,EAAGK,MAAM,CAACE,MAAM,CAAC,QAAQ;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRzB,OAAA;MAAA,GAAWS,iBAAiB,CAAC,CAAC;MAAAK,QAAA,EAC3BH,IAAI,CAACI,GAAG,CAAEW,GAAG,IAAK;QACjBd,UAAU,CAACc,GAAG,CAAC;QACf,oBACE1B,OAAA;UAAA,GAAQ0B,GAAG,CAACC,WAAW,CAAC,CAAC;UAAAb,QAAA,EACtBY,GAAG,CAACE,KAAK,CAACb,GAAG,CAAEc,IAAI,iBAClB7B,OAAA;YAAA,GAAQ6B,IAAI,CAACC,YAAY,CAAC,CAAC;YAAAhB,QAAA,EAAGe,IAAI,CAACR,MAAM,CAAC,MAAM;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACvD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACtB,EAAA,CAzCIF,eAAe;EAAA,QAajBH,QAAQ;AAAA;AAAAiC,EAAA,GAbN9B,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
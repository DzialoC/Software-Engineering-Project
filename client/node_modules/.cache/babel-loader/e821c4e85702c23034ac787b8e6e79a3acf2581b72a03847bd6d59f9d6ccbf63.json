{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BattleStation\\\\Documents\\\\School\\\\Fall 2023\\\\Software Engineering\\\\Project\\\\client\\\\src\\\\components\\\\MainContent.jsx\",\n  _s = $RefreshSig$();\n// MainContent.jsx\n\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponsiveTable = /*#__PURE__*/React.lazy(_c = () => import(\"./ResponsiveTable\")); // Assume this is your table component\n_c2 = ResponsiveTable;\nconst MainContent = ({\n  activeMenu\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    // This is where you'd make your database request.\n    // For demonstration purposes, we're using a timeout to simulate a network request.\n    const fetchData = async () => {\n      try {\n        // Simulate a network request\n        const response = await new Promise(resolve => {\n          setTimeout(() => resolve(\"data fetched from the database\"), 1000);\n        });\n        setData(response);\n      } catch (error) {\n        console.error(\"Failed to fetch data: \", error);\n      }\n    };\n    if (activeMenu) {\n      fetchData();\n    }\n  }, [activeMenu]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }, this),\n      children: activeMenu && data ? /*#__PURE__*/_jsxDEV(ResponsiveTable, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please select a menu item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MainContent, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c3 = MainContent;\nexport default MainContent;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ResponsiveTable$React.lazy\");\n$RefreshReg$(_c2, \"ResponsiveTable\");\n$RefreshReg$(_c3, \"MainContent\");","map":{"version":3,"names":["React","useState","useEffect","Suspense","jsxDEV","_jsxDEV","ResponsiveTable","lazy","_c","_c2","MainContent","activeMenu","_s","data","setData","fetchData","response","Promise","resolve","setTimeout","error","console","className","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/BattleStation/Documents/School/Fall 2023/Software Engineering/Project/client/src/components/MainContent.jsx"],"sourcesContent":["// MainContent.jsx\r\n\r\nimport React, { useState, useEffect, Suspense } from \"react\";\r\n\r\nconst ResponsiveTable = React.lazy(() => import(\"./ResponsiveTable\")); // Assume this is your table component\r\n\r\nconst MainContent = ({ activeMenu }) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // This is where you'd make your database request.\r\n    // For demonstration purposes, we're using a timeout to simulate a network request.\r\n    const fetchData = async () => {\r\n      try {\r\n        // Simulate a network request\r\n        const response = await new Promise((resolve) => {\r\n          setTimeout(() => resolve(\"data fetched from the database\"), 1000);\r\n        });\r\n        setData(response);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch data: \", error);\r\n      }\r\n    };\r\n\r\n    if (activeMenu) {\r\n      fetchData();\r\n    }\r\n  }, [activeMenu]);\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        {activeMenu && data ? (\r\n          <ResponsiveTable data={data} />\r\n        ) : (\r\n          <div>Please select a menu item</div>\r\n        )}\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,eAAe,gBAAGN,KAAK,CAACO,IAAI,CAAAC,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAAAC,GAAA,GAAjEH,eAAe;AAErB,MAAMI,WAAW,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAK;UAC9CC,UAAU,CAAC,MAAMD,OAAO,CAAC,gCAAgC,CAAC,EAAE,IAAI,CAAC;QACnE,CAAC,CAAC;QACFJ,OAAO,CAACE,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,IAAIT,UAAU,EAAE;MACdI,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBACEN,OAAA;IAAKiB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BlB,OAAA,CAACF,QAAQ;MAACqB,QAAQ,eAAEnB,OAAA;QAAAkB,QAAA,EAAK;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAE;MAAAL,QAAA,EACvCZ,UAAU,IAAIE,IAAI,gBACjBR,OAAA,CAACC,eAAe;QAACO,IAAI,EAAEA;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE/BvB,OAAA;QAAAkB,QAAA,EAAK;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACpC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlCIF,WAAW;AAAAmB,GAAA,GAAXnB,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAF,EAAA,EAAAC,GAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}